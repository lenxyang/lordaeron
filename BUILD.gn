
source_set("mesh_load_util") {
  sources = [
    "resource/mesh_load_util.cc",
    "resource/mesh_load_util.h",
  ]

  deps = [
    "//azer",
    "//azer/third_party/assimp",
  ]
}


static_library("lordaeron") {
  sources = [
    "config/project_config.cc",
    "config/project_config.h",
    "context.cc",
    "context.h",
    "effect/light.cc",
    "effect/light.h",
    "effect/diffuse_effect.cc",
    "effect/diffuse_effect.h",
    "effect/normal_line_effect.h",
    "effect/normal_line_effect.cc",
    "interactive/axis_object.cc",
    "interactive/axis_object.h",
    "interactive/controller_object.cc",
    "interactive/controller_object.h",
    "interactive/fps_camera_controller.cc",
    "interactive/fps_camera_controller.h",
    "interactive/light_controller.cc",
    "interactive/light_controller.h",
    "interactive/interactive_context.cc",
    "interactive/interactive_context.h",
    "interactive/interactive_controller.cc",
    "interactive/interactive_controller.h",
    "interactive/picking_controller.cc",
    "interactive/picking_controller.h",
    "interactive/rotation_controller.cc",
    "interactive/rotation_controller.h",
    "interactive/scale_controller.h",
    "interactive/scale_controller.cc",
    "interactive/translation_controller.cc",
    "interactive/translation_controller.h",
    "mainframe_render_delegate.cc",
    "mainframe_render_delegate.h",
    "render/camera_overlay.cc",
    "render/camera_overlay.h",
    "resource/effect_loader.cc",
    "resource/effect_loader.h",
    "resource/light_loader.cc",
    "resource/light_loader.h",
    "resource/material_loader.cc",
    "resource/material_loader.h",
    "resource/mesh_loader.cc",
    "resource/mesh_loader.h",
    "resource/resource.h",
    "resource/resource_loader.cc",
    "resource/resource_loader.h",
    "resource/scene_loader.cc",
    "resource/scene_loader.h",
    "resource/vertex_desc_loader.cc",
    "resource/vertex_desc_loader.h",
    "scene/lord_scene_render.cc",
    "scene/lord_scene_render.h",
    "scene/scene_node.cc",
    "scene/scene_node.h",
    "scene/scene_node_traverse.cc",
    "scene/scene_node_traverse.h",
    "scene/scene_node_picking.cc",
    "scene/scene_node_picking.h",
    "scene/scene_render_tree.cc",
    "scene/scene_render_tree.h",
    "scene/scene_tree_model.cc",
    "scene/scene_tree_model.h",
    "ui/camera_view.cc",
    "ui/camera_view.h",
    "ui/controls/vector_control.cc",
    "ui/controls/vector_control.h",
    "ui/layout_util.cc",
    "ui/layout_util.h",
    "ui/light_property_pane.cc",
    "ui/light_property_pane.h",
    "ui/iconset.cc",
    "ui/iconset.h",
    "ui/models/repository_model.cc",
    "ui/models/repository_model.h",
    "ui/render_frame_window.cc",
    "ui/render_frame_window.h",
    "ui/renderer_info_pane.cc",
    "ui/renderer_info_pane.h",
    "ui/scene_render_window.cc",
    "ui/scene_render_window.h",
    "ui/scene_node_control_pane.cc",
    "ui/scene_node_control_pane.h",
    "ui/scene_node_inspector_pane.cc",
    "ui/scene_node_inspector_pane.h",
    "ui/scene_node_property_pane.cc",
    "ui/scene_node_property_pane.h",
    "ui/scene_tree_view.cc",
    "ui/scene_tree_view.h",
    "ui/scene_tree_view_lineitem.cc",
    "ui/scene_tree_view_lineitem.h",
    "ui/simple_render_window.cc",
    "ui/simple_render_window.h",
    "ui/theme/theme.cc",
    "ui/theme/theme.h",
    "ui/transform_property_pane.cc",
    "ui/transform_property_pane.h",
    "ui/nelf_context.cc",
    "ui/nelf_context.h",
    "ui/toolbar/camera_control_toolbar.cc",
    "ui/toolbar/camera_control_toolbar.h",
    "ui/toolbar/object_control_toolbar.cc",
    "ui/toolbar/object_control_toolbar.h",
    "ui/window.cc",
    "ui/window.h",
    "util/axis_aligned_bounding_box.h",
    "util/axis_aligned_bounding_box.cc",
    "util/bounding_volumn.cc",
    "util/bounding_volumn.h",
    "util/picking.cc",
    "util/picking.h",
    "util/xml_util.cc",
    "util/xml_util.h",
  ]
  deps = [
    ":mesh_load_util",
  ]
  public_deps = [
    "//skia",
    "//ui/views",
    "//ui/base",
    "//ui/events",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//azer",
    "//azer/math",
    "//azer/render/util",
    "//azer/util/xml",
    "//nelf",
    "res",
  ]
}

executable("mainframe") {
  output_name = "lordaeron_mainframe"
  sources = ["mainframe.cc",]
  deps = [":lordaeron"]
}

group("sandbox") {
  deps = ["sandbox"]
}